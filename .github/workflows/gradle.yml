# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: deploy011-bucket-replicaset

jobs:
  build:
    defaults:
      run:
        working-directory: ./server

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - uses: actions/checkout@v3
    - name: create init data
      run: |
        touch ./src/main/resources/application.yml
        echo "${{ secrets.YML }}" > ./src/main/resources/application.yml
        touch ./src/main/resources/data.sql
        echo "${{ secrets.INIT_DATA }}" > ./src/main/resources/data.sql
    - uses: actions/upload-artifact@v3
      with:
        name: application.yml
        path: ./src/main/resources/application.yml
    - uses: actions/upload-artifact@v3
      with:
        name: data.sql
        path: ./src/main/resources/data.sql

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      working-directory: ./server

    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./server

  
   # - name: Build with Gradle
   #   uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
   #   with:
   #     arguments: build
        
    - name: Make zip file
      run: zip -r ./main.zip .
      shell: bash
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./main.zip s3://$S3_BUCKET_NAME/main.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name main
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name main-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=main.zip